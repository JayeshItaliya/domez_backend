const popoverTriggerList = document.querySelectorAll(
    '[data-bs-toggle="popover"]'
);
const popoverList = [...popoverTriggerList].map(
    (popoverTriggerEl) => new bootstrap.Popover(popoverTriggerEl)
);

function set_cookie(t, e, o, n) {
    "use strict";
    showpreloader();
    var a = new Date();
    a.setTime(a.getTime() + 31536e6);
    var r = "; expires=" + a.toUTCString();
    (document.cookie = t + " = " + e + r + "; path=/"),
        (document.cookie = o + " = " + n + r + "; path=/"),
        location.reload();
}

function swal_cancelled(t) {
    "use strict";
    var e = wrong;
    t && (e = "" + t), swalWithBootstrapButtons.fire(oops, e, "error");
}

function showpreloader() {
    $("#preloader , #status").show();
}

function hidepreloader() {
    $("#preloader , #status").hide();
}

function logout(t) {
    "use strict";
    swalWithBootstrapButtons
        .fire({
            title: are_you_sure,
            icon: "warning",
            confirmButtonText: yes,
            cancelButtonText: no,
            showCancelButton: !0,
            reverseButtons: !0,
        })
        .then((e) => {
            showpreloader(),
                e.isConfirmed && (window.location = t),
                hidepreloader();
        });
}

function change_status(t, e, o) {
    "use strict";
    swalWithBootstrapButtons
        .fire({
            title: are_you_sure,
            icon: "warning",
            confirmButtonText: yes,
            cancelButtonText: no,
            showCancelButton: !0,
            reverseButtons: !0,
        })
        .then((n) => {
            showpreloader(),
                n.isConfirmed &&
                    $.ajax({
                        type: "get",
                        url: o,
                        data: {
                            id: t,
                            status: e,
                        },
                        dataType: "json",
                        success: function (t) {
                            1 == t
                                ? (hidepreloader(),
                                  toastr.success("Success"),
                                  location.reload())
                                : (hidepreloader(), swal_cancelled(wrong));
                        },
                        failure: function (t) {
                            hidepreloader(), swal_cancelled(wrong);
                        },
                    }),
                hidepreloader();
        });
}

function deletedata(i, u) {
    "use strict";
    swalWithBootstrapButtons
        .fire({
            icon: "warning",
            title: are_you_sure,
            showCancelButton: !0,
            allowOutsideClick: !1,
            allowEscapeKey: !1,
            confirmButtonText: yes,
            cancelButtonText: no,
            reverseButtons: !0,
            showLoaderOnConfirm: !0,
            preConfirm: function () {
                return new Promise(function (o, n) {
                    $.ajax({
                        type: "GET",
                        url: u,
                        data: {
                            id: i,
                        },
                        dataType: "json",
                        success: function (t) {
                            if (1 != t.status) return swal_cancelled(wrong), !1;
                            location.reload();
                        },
                        error: function (t) {
                            return swal_cancelled(wrong), !1;
                        },
                    });
                });
            },
        })
        .then((t) => {
            t.isConfirmed || (t.dismiss, Swal.DismissReason.cancel);
        });
}
$(window).on("load", function () {
    "use strict";
    $("#status").delay(500).fadeOut("slow"),
        $("#preloader").delay(500).fadeOut("slow");
}),
    $("input[name=font_family]").on("change", function () {
        var t = $(this).val();
        set_cookie("font_family", t);
    }),
    $(".btn-change-color").on("click", function () {
        var t = $('input[type="color"]#primary_color').val(),
            e = $('input[type="color"]#secondary_color').val();
        set_cookie("primary_color", t, "secondary_color", e);
    }),
    $(function () {
        $("form, input, textarea").attr("autocomplete", "off"),
            document.getElementById("bootstrapTable") &&
                ($("#bootstrapTable").bootstrapTable({
                    toolbar: ".toolbar",
                    clickToSelect: !1,
                    showRefresh: !1,
                    search: !0,
                    showToggle: !1,
                    showColumns: !1,
                    pagination: !0,
                    searchAlign: "right",
                    pageSize: 10,
                    clickToSelect: !1,
                    pageList: [10, 25, 50, 100],
                }),
                $("#bootstrapTable").removeClass("table-bordered"));
        $.ajaxSetup({
            headers: {
                "X-CSRF-TOKEN": $('meta[name="csrf-token"]').attr("content"),
            },
        });
    });
const swalWithBootstrapButtons = Swal.mixin({
    customClass: {
        confirmButton: "btn btn-success mx-2",
        cancelButton: "btn btn-danger mx-2",
    },
    buttonsStyling: !1,
});
$(document).on("input", ".numbers_only", function () {
    this.value = this.value.replace(/[^\d.]/g, "").replace(/(\..*)\./g, "$1");
});
